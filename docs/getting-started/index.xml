<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting started on Molecule</title>
    <link>http://scalamolecule.org/docs/getting-started/</link>
    <description>Recent content in Getting started on Molecule</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Jan 2015 22:06:44 +0100</lastBuildDate>
    
	<atom:link href="http://scalamolecule.org/docs/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup</title>
      <link>http://scalamolecule.org/docs/getting-started/setup/</link>
      <pubDate>Fri, 02 Jan 2015 22:06:44 +0100</pubDate>
      
      <guid>http://scalamolecule.org/docs/getting-started/setup/</guid>
      <description>Setup To use Molecule we need to define our database schema in a Schema definition file and then tell sbt about it. When compiling our project from the command line, all necessary boilerplate code is then automatically generated by the sbt MoleculePlugin.
1. SBT build settings Add the following to your build files:
project/build.properties:
sbt.version=0.13.16  project/buildinfo.sbt:
addSbtPlugin(&amp;quot;org.scalamolecule&amp;quot; % &amp;quot;sbt-molecule&amp;quot; % &amp;quot;0.4.5&amp;quot;)  build.sbt:
lazy val yourProject = project.in(file(&amp;quot;demo&amp;quot;)) .</description>
    </item>
    
  </channel>
</rss>