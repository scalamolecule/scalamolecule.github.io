import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as h,e as n,a as s,w as l,b as i,r,o}from"./app-DWIbxJ49.js";const B={};function A(c,a){const k=r("CodeTabs"),p=r("RouteLink");return o(),g("div",null,[a[19]||(a[19]=h(`<h1 id="sql-libs-overview" tabindex="-1"><a class="header-anchor" href="#sql-libs-overview"><span>SQL libs overview</span></a></h1><p>Current SQL libraries in the Scala ecosystem can be organised by the kind of code they are accessed with:</p><ul><li><strong>Plain SQL</strong></li><li><strong>SQL-flavored DSL</strong></li><li><strong>Scala collection-style DSL</strong></li></ul><p>Libraries in all 3 categories adapt to the semantics of SQL databases in various ways. One could say that &quot;your domain comes to the database&quot;.</p><p>Molecule flips this direction of attention and provides boilerplate code to <em><strong>&quot;let the database come to your domain&quot;</strong></em>.</p><p>Instead of writing code that access the database, you can <em>compose</em> your domain terms to form declarative and fully type-inferred molecules, or data models, of <em>what</em> data you&#39;re interested in. Molecule then translates that into <em>how</em> it is mutated/fetched with SQL.</p><h4 id="a-fourth-category" tabindex="-1"><a class="header-anchor" href="#a-fourth-category"><span>A fourth category</span></a></h4><p>By reversing the dynamics and taking this domain-declarative approach, one could say that Molecule places itself in a 4th category of SQL libraries for custom domain-tailored data composition.</p><p>Let&#39;s get an overview of libraries in the traditional 3 categories:</p><h2 id="_1-plain-sql-libraries" tabindex="-1"><a class="header-anchor" href="#_1-plain-sql-libraries"><span>1. Plain SQL libraries</span></a></h2><p>Libraries that let you write plain SQL directly with low-level control:</p><ul><li><a href="https://typelevel.org/doobie/index.html" target="_blank" rel="noopener noreferrer">Doobie</a></li><li><a href="https://github.com/AugustNagro/magnum" target="_blank" rel="noopener noreferrer">Magnum</a> (with additional repository methods)</li><li><a href="https://playframework.github.io/anorm/" target="_blank" rel="noopener noreferrer">Anorm</a></li><li><a href="https://typelevel.org/skunk/" target="_blank" rel="noopener noreferrer">Skunk</a></li></ul><p>Example SQL query that is the same for the 4 libraries:</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;select p.name, p.age, a.street </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      from Person as p </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      inner join Address as a on p.address = a.id&quot;&quot;&quot;</span></span></code></pre></div><p><a href="/database/compare/plain-sql">Compare</a> Molecule with plain SQL libraries...</p><h2 id="_2-sql-flavored-dsl-libraries" tabindex="-1"><a class="header-anchor" href="#_2-sql-flavored-dsl-libraries"><span>2. SQL-flavored DSL libraries</span></a></h2><p>Libraries that offer a DSL resembling SQL syntax, while ensuring type-safety:</p><ul><li><a href="https://scalikejdbc.org" target="_blank" rel="noopener noreferrer">ScalikeJDBC</a></li><li><a href="https://github.com/oyvindberg/typo" target="_blank" rel="noopener noreferrer">Typo</a></li><li><a href="https://takapi327.github.io/ldbc/" target="_blank" rel="noopener noreferrer">ldbc</a></li><li><a href="https://www.squeryl.org" target="_blank" rel="noopener noreferrer">Squeryl (Java)</a></li><li><a href="https://www.jooq.org" target="_blank" rel="noopener noreferrer">JOOQ (Java)</a></li></ul>`,18)),n(k,{data:[{id:"ScalikeJDBC"},{id:"Typo"},{id:"ldbc"},{id:"Squeryl (Java)"},{id:"JOOQ (Java)"}],"tab-id":"coord"},{title0:l(({value:e,isActive:t})=>[...a[0]||(a[0]=[i("ScalikeJDBC",-1)])]),title1:l(({value:e,isActive:t})=>[...a[1]||(a[1]=[i("Typo",-1)])]),title2:l(({value:e,isActive:t})=>[...a[2]||(a[2]=[i("ldbc",-1)])]),title3:l(({value:e,isActive:t})=>[...a[3]||(a[3]=[i("Squeryl (Java)",-1)])]),title4:l(({value:e,isActive:t})=>[...a[4]||(a[4]=[i("JOOQ (Java)",-1)])]),tab0:l(({value:e,isActive:t})=>[...a[5]||(a[5]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," Person"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".syntax("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"p"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," a"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," Address"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".syntax("),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"a"'),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"withSQL {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  select(p.result.name, p.result.age, a.result.street)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .from("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Person"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," as"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," p"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .innerJoin("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Address"),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," as"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," a"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .on(p.addressId, a.id)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}.map(rs => (rs.string("),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"), rs.int("),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"), rs.string("),s("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .list")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .apply()")])])])],-1)])]),tab1:l(({value:e,isActive:t})=>[...a[6]||(a[6]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," query"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," =")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"  Person"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".select")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .join("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Address"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},").on(_.addressId, _.id)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .map((p, a) => (p.name, p.age, a.street))")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," result"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," query.run(transaction) "),s("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"// Using Skunk as the backend")])])])],-1)])]),tab2:l(({value:e,isActive:t})=>[...a[7]||(a[7]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"TableQuery"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Person"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .join("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"TableQuery"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Address"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"])")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .on((p, a) => p.id === a.id)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .select((p, a) => p.name *: p.age *: a.street)")])])])],-1)])]),tab3:l(({value:e,isActive:t})=>[...a[8]||(a[8]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"from(persons, addresses)((p, a) =>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  where(p.addressId === a.id)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    select ((p.name, p.age, a.street))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")])])])],-1)])]),tab4:l(({value:e,isActive:t})=>[...a[9]||(a[9]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Result"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," <"),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," Record3"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," <"),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," String")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Integer")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," >> result "),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"=")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"  DSL"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".using(configuration)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .select("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"PERSON"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"NAME"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"PERSON"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"AGE"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"ADDRESS"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"STREET"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .from("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"PERSON"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .join("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"ADDRESS"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},").on("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"PERSON"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"ADDRESS_ID"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".eq("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"ADDRESS"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"ID"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    .fetch();")])])])],-1)])]),_:1}),a[20]||(a[20]=h(`<details><summary>Expand all</summary><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ldbc</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TableQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .join(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TableQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .on((p, a) =&gt; p.id === a.id)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .select((p, a) =&gt; p.name *: p.age *: a.street)</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ScalikeJDBC</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.syntax(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;p&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.syntax(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">withSQL {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  select(p.result.name, p.result.age, a.result.street)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .from(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .innerJoin(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .on(p.addressId, a.id)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}.map(rs =&gt; (rs.string(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), rs.int(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), rs.string(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .list</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .apply()</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Typo</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> query</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.select</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .join(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).on(_.addressId, _.id)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .map((p, a) =&gt; (p.name, p.age, a.street))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> query.run(transaction) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Using Skunk as the backend</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Squeryl (Java)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">from(persons, addresses)((p, a) =&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  where(p.addressId === a.id)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    select ((p.name, p.age, a.street))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// JOOQ (Java)</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Record3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Integer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  DSL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.using(configuration)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .select(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">PERSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">PERSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">AGE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ADDRESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">STREET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .from(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">PERSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .join(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ADDRESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).on(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">PERSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ADDRESS_ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.eq(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ADDRESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .fetch();</span></span></code></pre></div></details><p><a href="/database/compare/sql-dsl">Compare</a> Molecule with SQL-like DSL libraries...</p><h2 id="_3-scala-collection-style-dsl-libraries" tabindex="-1"><a class="header-anchor" href="#_3-scala-collection-style-dsl-libraries"><span>3. Scala collection-style DSL libraries</span></a></h2><p>Libraries that use Scala collection-like syntax to query SQL data:</p><ul><li><a href="https://github.com/com-lihaoyi/scalasql" target="_blank" rel="noopener noreferrer">ScalaSql</a></li><li><a href="https://scala-slick.org" target="_blank" rel="noopener noreferrer">Slick</a></li><li><a href="https://github.com/zio/zio-quill" target="_blank" rel="noopener noreferrer">Quill</a></li></ul>`,5)),n(k,{data:[{id:"ScalaSql"},{id:"Slick"},{id:"Quill"}],"tab-id":"coord"},{title0:l(({value:e,isActive:t})=>[...a[10]||(a[10]=[i("ScalaSql",-1)])]),title1:l(({value:e,isActive:t})=>[...a[11]||(a[11]=[i("Slick",-1)])]),title2:l(({value:e,isActive:t})=>[...a[12]||(a[12]=[i("Quill",-1)])]),tab0:l(({value:e,isActive:t})=>[...a[13]||(a[13]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Person"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".select.join("),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Address"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")(_.id === _.personId)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .map { "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"case"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (p, a) => (p.name, p.age, a.street) }")])])])],-1)])]),tab1:l(({value:e,isActive:t})=>[...a[14]||(a[14]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(people join addresses on (_.id === _.addressId))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  .map { "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"case"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (p, a) => (p.name, p.age, a.street) }")])])])],-1)])]),tab2:l(({value:e,isActive:t})=>[...a[15]||(a[15]=[s("div",{class:"language-scala","data-highlighter":"shiki","data-ext":"scala",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",{class:"language-scala"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," q"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," quote {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  for"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    p <- query["),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Person"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    a <- query["),s("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Address"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"] "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"if"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," p.addressId "),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"=="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," a.id")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  } "),s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"yield"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (p.name, p.age, a.street)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"val"),s("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," result"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," run(q)")])])])],-1)])]),_:1}),a[21]||(a[21]=h(`<details><summary>Expand all</summary><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ScalaSql</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.select.join(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)(_.id === _.personId)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .map { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (p, a) =&gt; (p.name, p.age, a.street) }</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Slick</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(people join addresses on (_.id === _.addressId))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  .map { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (p, a) =&gt; (p.name, p.age, a.street) }</span></span></code></pre></div><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//tab Quill</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> q</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> quote {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      p &lt;- query[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      a &lt;- query[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> p.addressId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a.id</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (p.name, p.age, a.street)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> run(q)</span></span></code></pre></div></details><p><a href="/database/compare/collection-dsl">Compare</a> Molecule with Scala collection-like DSL libraries...</p><h2 id="_4-domain-tailored-composition-molecule" tabindex="-1"><a class="header-anchor" href="#_4-domain-tailored-composition-molecule"><span>4. Domain-tailored composition (Molecule)</span></a></h2><p>Libraries that compose queries declaratively from domain terms:</p><ul><li><a href="https://github.com/scalamolecule/molecule" target="_blank" rel="noopener noreferrer">Molecule</a></li></ul><div class="language-scala" data-highlighter="shiki" data-ext="scala" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-scala"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Molecule</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.name.age.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.street</span></span></code></pre></div><p>Once your domain structure is defined, Molecule generates a domain-tailored DSL. You then compose your query declaratively with minimal syntax noise, focusing only on what data your domain cares about:</p><p>Molecule doesn’t just aim to reduce boilerplate. It shifts the mental model: from writing how to fetch data to declaring what data your domain cares about.</p>`,8)),s("p",null,[a[17]||(a[17]=i("Molecule is also the only SQL library in the Scala ecosystem that can insert and return ",-1)),n(p,{to:"/database/query/relationships.html#nested"},{default:l(()=>[...a[16]||(a[16]=[i("nested data",-1)])]),_:1}),a[18]||(a[18]=i(".",-1))])])}const F=d(B,[["render",A]]),C=JSON.parse('{"path":"/database/compare/overview.html","title":"SQL libs overview","lang":"en-US","frontmatter":{"description":"SQL libs overview Current SQL libraries in the Scala ecosystem can be organised by the kind of code they are accessed with: Plain SQL SQL-flavored DSL Scala collection-style DSL...","toc":{"levels":[2,3]},"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL libs overview\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-01T23:15:53.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.scalamolecule.org/intro/database/compare/overview.html"}],["meta",{"property":"og:site_name","content":"Scala Molecule"}],["meta",{"property":"og:title","content":"SQL libs overview"}],["meta",{"property":"og:description","content":"SQL libs overview Current SQL libraries in the Scala ecosystem can be organised by the kind of code they are accessed with: Plain SQL SQL-flavored DSL Scala collection-style DSL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-10-01T23:15:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-01T23:15:53.000Z"}]]},"git":{"createdTime":1759360553000,"updatedTime":1759360553000,"contributors":[{"name":"marcgrue","username":"marcgrue","email":"marcgrue@gmail.com","commits":1,"url":"https://github.com/marcgrue"}]},"filePathRelative":"database/compare/overview.md","autoDesc":true}');export{F as comp,C as data};
