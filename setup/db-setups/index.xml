<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database setups on Molecule</title>
    <link>http://www.scalamolecule.org/setup/db-setups/</link>
    <description>Recent content in Database setups on Molecule</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://www.scalamolecule.org/setup/db-setups/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Datomic Peer free, mem</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peer-free-mem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peer-free-mem/</guid>
      <description>Datomic Peer (free), in-mem Minimal project setup to test using Molecule with a free Datomic Peer in-memory database (protocol: mem).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peer-free-mem&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34; ), libraryDependencies ++= Seq( &amp;#34;org.scalamolecule&amp;#34; %% &amp;#34;molecule&amp;#34; % &amp;#34;1.1.0&amp;#34;, &amp;#34;com.datomic&amp;#34; % &amp;#34;datomic-free&amp;#34; % &amp;#34;0.9.5697&amp;#34; ), // path to domain model directory  moleculeDataModelPaths := Seq(&amp;#34;app&amp;#34;), // Generate Molecule boilerplate code with `sbt clean compile -Dmolecule=true`  moleculePluginActive := sys.</description>
    </item>
    
    <item>
      <title>Datomic Peer free, free</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peer-free-free/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peer-free-free/</guid>
      <description>Datomic Peer (free), persisted Minimal project setup to persist data to disk with Molecule and a free Datomic Peer database (protocol: free).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peer-free-free&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34;, ), libraryDependencies ++= Seq( &amp;#34;org.scalamolecule&amp;#34; %% &amp;#34;molecule&amp;#34; % &amp;#34;1.1.0&amp;#34;, &amp;#34;com.datomic&amp;#34; % &amp;#34;datomic-free&amp;#34; % &amp;#34;0.9.5697&amp;#34; ), // path to domain model directory  moleculeDataModelPaths := Seq(&amp;#34;app&amp;#34;), // Generate Molecule boilerplate code with `sbt clean compile -Dmolecule=true`  moleculePluginActive := sys.</description>
    </item>
    
    <item>
      <title>Datomic Peer pro, mem</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peer-pro-mem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peer-pro-mem/</guid>
      <description>Datomic Peer (pro), in-mem Minimal project setup to test using Molecule with a starter/pro Datomic Peer in-memory database (protocol: mem).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peer-pro-mem&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34;, &amp;#34;my.datomic.com&amp;#34; at &amp;#34;https://my.datomic.com/repo&amp;#34; ), /* Downloading Datomic Starter/Pro requires authentication of your license: Create a ~/.sbt/.credentials file with the following content: realm=Datomic Maven Repo host=my.datomic.com id=my.datomic.com user=&amp;lt;your-username&amp;gt; pass=&amp;lt;your-password&amp;gt; Then let sbt provide your secret credentials: */ credentials += Credentials(Path.</description>
    </item>
    
    <item>
      <title>Datomic Peer pro, dev</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peer-pro-dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peer-pro-dev/</guid>
      <description>Datomic Peer (pro), persisted Minimal project setup to persist data to disk with Molecule and a starter/pro Datomic Peer database (protocol: dev).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peer-pro-dev&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34;, &amp;#34;my.datomic.com&amp;#34; at &amp;#34;https://my.datomic.com/repo&amp;#34; ), /* Downloading Datomic Starter/Pro requires authentication of your license: Create a ~/.sbt/.credentials file with the following content: realm=Datomic Maven Repo host=my.datomic.com id=my.datomic.com user=&amp;lt;your-username&amp;gt; pass=&amp;lt;your-password&amp;gt; Then let sbt provide your secret credentials: */ credentials += Credentials(Path.</description>
    </item>
    
    <item>
      <title>Datomic Peer Server, mem</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peerserver-mem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peerserver-mem/</guid>
      <description>Datomic Peer Server, in-mem Minimal project setup to test using Molecule with a Datomic Peer Server in-memory database (protocol: mem).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peerserver-mem&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34;, &amp;#34;my.datomic.com&amp;#34; at &amp;#34;https://my.datomic.com/repo&amp;#34; ), /* Downloading Datomic Starter/Pro requires authentication of your license: Create a ~/.sbt/.credentials file with the following content: realm=Datomic Maven Repo host=my.datomic.com id=my.datomic.com user=&amp;lt;your-username&amp;gt; pass=&amp;lt;your-password&amp;gt; Then let sbt provide your secret credentials: */ credentials += Credentials(Path.</description>
    </item>
    
    <item>
      <title>Datomic Peer Server, dev</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-peerserver-dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-peerserver-dev/</guid>
      <description>Datomic Peer Server, persisted Minimal project setup to persist data to disk with Molecule and a Datomic Peer Server database (protocol: dev).
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .enablePlugins(MoleculePlugin) .settings( name := &amp;#34;molecule-datomic-peerserver-dev&amp;#34;, scalaVersion := &amp;#34;2.13.8&amp;#34;, resolvers ++= Seq( Resolver.sonatypeRepo(&amp;#34;releases&amp;#34;), &amp;#34;clojars&amp;#34; at &amp;#34;https://clojars.org/repo&amp;#34;, &amp;#34;my.datomic.com&amp;#34; at &amp;#34;https://my.datomic.com/repo&amp;#34; ), /* Downloading Datomic Starter/Pro requires authentication of your license: Create a ~/.sbt/.credentials file with the following content: realm=Datomic Maven Repo host=my.datomic.com id=my.datomic.com user=&amp;lt;your-username&amp;gt; pass=&amp;lt;your-password&amp;gt; Then let sbt provide your secret credentials: */ credentials += Credentials(Path.</description>
    </item>
    
    <item>
      <title>Datomic dev-local/cloud</title>
      <link>http://www.scalamolecule.org/setup/db-setups/datomic-devlocal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.scalamolecule.org/setup/db-setups/datomic-devlocal/</guid>
      <description>Datomic dev-local/cloud Minimal project setup to test a Cloud setup locally locally against the Datomic Client api without connecting to a remote client.
1. Download dev-tools and setup sbt (once) The dev-local library is part of Cognitect dev-tools that needs to be downloaded first. After downloading, you ./install the library in your local maven repository and let sbt know to look there too:
import sbt.Keys._ lazy val `molecule-basic` = project.in(file(&amp;#34;.&amp;#34;)) .</description>
    </item>
    
  </channel>
</rss>
